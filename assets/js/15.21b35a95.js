(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{530:function(s,t,a){"use strict";a.r(t);var n=a(8),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"assertions-and-preconditions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assertions-and-preconditions"}},[s._v("#")]),s._v(" Assertions and Preconditions")]),s._v(" "),a("blockquote",[a("p",[s._v("什麼時候該用 assertions、preconditions 還有 fatalError 呢？")])]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("這是延續 "),a("a",{attrs:{href:"./swift-study-03-basic-types"}},[s._v("Swift 基礎篇")]),s._v(" 的小小番外篇，今晚，我想來點 "),a("strong",[s._v("Assertions and Preconditions")]),s._v("。")]),s._v(" "),a("p",[s._v("針對程式碼，我們很常使用到判斷式來決定要做什麼事情，有的時候也會期待一個變數或常數經過透過某個 Function 或是處理之後，應該要符合某種特定條件。")]),s._v(" "),a("p",[s._v("Swift 提供了這兩種方法，讓開發者表達所設的假設與期望，確保透過這兩個條件驗證結果符合你所預期的結果。")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"assertions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assertions"}},[s._v("#")]),s._v(" Assertions")]),s._v(" "),a("p",[s._v("Assertion 就中文意思來說就是"),a("strong",[s._v("斷言")]),s._v("或是"),a("strong",[s._v("明確肯定")]),s._v("，顧名思義可以用來保證某個條件是否為真。")]),s._v(" "),a("p",[s._v("剛剛提到他可以用來判斷邏輯，所以條件判斷結果為真的時候，程式碼就會看起來像沒事一樣地繼續往下執行，但如果判斷結果為否，程式碼就會立即中斷，對於 APP End-User  的角度來看，就是俗稱的 "),a("strong",[s._v("Crash")]),s._v("。")]),s._v(" "),a("p",[s._v("國文的分數必須是 0 分以上，不可以有負數的情況，所以透過 Global Function "),a("code",[s._v("assert(國文分數 > 0)")]),s._v(" 來進行判斷，如果條件通過程式碼才能繼續執行，我們來看底下的範例：")]),s._v(" "),a("div",{staticClass:"language-swift line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" 國文分數 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("87")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("國文分數 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("但是，不通過會怎麼樣嗎？")]),s._v(" "),a("div",{staticClass:"language-swift line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" 國文分數 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("國文分數 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Assertion failed: file ..., line 2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("img",{attrs:{src:"/swift-study/chinese_score.png",alt:"Assertion error"}})]),s._v(" "),a("p",[s._v("在 Xcode 中就會跳出錯誤訊息，並且跟你說程序已被中斷，並且在 Output 印出 "),a("code",[s._v("Assertion failed")]),s._v("，還提醒你錯在第幾行，貼心 ❤️。")]),s._v(" "),a("img",{attrs:{src:"/swift-study/so_sweet.gif",alt:"so_sweet",width:"300"}}),s._v(" "),a("p",[s._v("但是這樣的錯誤訊息，現在練習當然很清楚知道錯在哪裡，但是如果是在好幾萬行 Code 的專案中，還是希望可以不用"),a("s",[s._v("透過觀落陰")]),s._v("考古，才能得知為什麼錯，我們來看一下官方 API "),a("code",[s._v("Swit > Assert")]),s._v("有什麼提示可以新增：")]),s._v(" "),a("div",{staticClass:"language-swift line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token omit keyword"}},[s._v("_")]),s._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attribute atrule"}},[s._v("@autoclosure")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token omit keyword"}},[s._v("_")]),s._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attribute atrule"}},[s._v("@autoclosure")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\t\t\tfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StaticString")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal constant"}},[s._v("#file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UInt")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal constant"}},[s._v("#line")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("可以從上面發現，原來有個 message 可以使用，官方 API 對於 message 是這樣說明："),a("code",[s._v("A string to print if condition is evaluated to false. The default is an empty string.")]),s._v("，"),a("strong",[s._v("message")]),s._v(" 這個 Parameter 預設值是空字串，所以我們更清楚地知道，原來是可以加註一些說明，這樣一來在發生判斷失敗的時候，就可以快速知道是什麼錯誤原因。")]),s._v(" "),a("div",{staticClass:"language-swift line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" 國文分數 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("國文分數 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"分數不可以為負數！"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Assertion failed: 分數不可以為負數！: file ...")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("還有一個 "),a("code",[s._v("assertionFailure()")]),s._v("，這個方法你可以把它想像成 "),a("code",[s._v("assert(false)")]),s._v("，會讓程式碼中斷，例如你可以用"),a("s",[s._v("別人的Code中")]),s._v("在 Switch Control Flow 的 Default 中加上 "),a("code",[s._v("assertionFailure()")]),s._v("，條件都不符合的時候執行中斷。")])]),s._v(" "),a("h2",{attrs:{id:"preconditions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preconditions"}},[s._v("#")]),s._v(" Preconditions")]),s._v(" "),a("p",[s._v("先來看個案例，針對字串轉整數的初始化方法（之後會介紹），可以到 "),a("a",{attrs:{href:"https://github.com/apple/swift/blob/da61cc8cdf7aa2bfb3ab03200c52c4d371dc6751/stdlib/public/core/IntegerParsing.swift",target:"_blank",rel:"noopener noreferrer"}},[s._v("Swift GitHub"),a("OutboundLink")],1),s._v(" ( "),a("strong",[s._v("swift/stdlib/public/core/IntegerParsing.swift")]),s._v(" ) 上看到這個初始化方法的原始碼，在 152 行可以發現，也有用到 "),a("code",[s._v("precondition")]),s._v("來去做 radix 的判斷。")]),s._v(" "),a("p",[s._v("preconditions 其實跟 assertions 很像，連 API 都長得 87% 像，都是用來判斷條件。")]),s._v(" "),a("div",{staticClass:"language-swift line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("precondition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token omit keyword"}},[s._v("_")]),s._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attribute atrule"}},[s._v("@autoclosure")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token omit keyword"}},[s._v("_")]),s._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attribute atrule"}},[s._v("@autoclosure")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\t\t\tfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StaticString")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal constant"}},[s._v("#file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UInt")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal constant"}},[s._v("#line")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("當然 Precondition 也有 "),a("code",[s._v("preconditionFailure()")]),s._v("。")])]),s._v(" "),a("p",[s._v("但是這樣跟 assertions 到底有什麼差別呢？差別就在於 assertions 只會在 Debug 環境下被編譯執行，在 Release 則不會，可以簡單開個 Xcode Project")]),s._v(" "),a("img",{attrs:{src:"/swift-study/rubbing_eyes.gif",alt:"rubbing_eyes",width:"300"}}),s._v(" "),a("ul",[a("li",[s._v("點選 "),a("code",[s._v("*.xcodeproject")]),s._v("檔案 > Build Setting > Apple Clang - Code Generation > Optimization Level")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/swift-study/OL.png",alt:""}})]),s._v(" "),a("p",[s._v("我們可以看到 Debug 的 "),a("a",{attrs:{href:"https://github.com/apple/swift/blob/master/docs/OptimizationTips.rst?source=post_page---------------------------#enabling-optimizations",target:"_blank",rel:"noopener noreferrer"}},[s._v("Optimization Level"),a("OutboundLink")],1),s._v(" 是 "),a("strong",[s._v("None[-O0]")]),s._v("；Release 的則是 "),a("strong",[s._v("Fastest, Smallest [-Os]")]),s._v("，在預設的情況下，Debug 環境對於優化的等級採最低限度地優化，也意味著會完全保留所有 debug 資訊，如果想知道更多 Optimization Level 的消息，可以到 GCC 官網的"),a("a",{attrs:{href:"https://gcc.gnu.org/onlinedocs/gnat_ugn/Optimization-Levels.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("文件"),a("OutboundLink")],1),s._v("查看。")]),s._v(" "),a("p",[s._v("除了 assertions 在優化等級的限制，preconditions 也有特別的規則，在 "),a("strong",[s._v("[-Ounchcked]")]),s._v(" 的規則下，preconditions 不會被檢查。")]),s._v(" "),a("p",[s._v("但有一個特別的方法不受到優化等級的限制，叫做 "),a("code",[s._v("FatalError()")]),s._v("，跟 "),a("code",[s._v("assertionFailure")]),s._v(" 還有 "),a("code",[s._v("preconditionFailure")]),s._v(" 很類似，一樣都會無條件中斷程序。")]),s._v(" "),a("p",[s._v("中文意思又叫做"),a("strong",[s._v("致命錯誤")]),s._v("，聽起來有點中二，但確實是蠻危險的。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/swift-study/dangerous.gif",alt:""}})]),s._v(" "),a("p",[s._v("無論在什麼等級下都不會被優化，所以在任何環境都會執行，所以在使用的時候盡量避免，除非很明確的知道判斷結果為否的嚴重性跟 FatalError 是差不多的，再去使用，官方 API 是建議可以這麼做：")]),s._v(" "),a("blockquote",[a("p",[s._v("在還沒開發完成的地方加上 "),a("code",[s._v('fatalError("Unimplemented")')]),s._v("，在編譯的時候，跳出錯誤訊息，告訴開發人員還有地方沒有完成。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);